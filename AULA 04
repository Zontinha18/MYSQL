CONSTRAINT: 

São utilizadas para especificar as regras de dados em uma tabela.
Limitam os tipos de dados e em caso de qualquer violação de uma regra definida
a operação será abortada e uma exceção lançada.

Pode ser de nivel de coluna ou de tabela.

Tipos mais comuns de Constraints:
- NOT NULL
- UNIQUE
- PRIMARY KEY
- FOREIGN KEY - FUNÇÃO: Prevenir que ações removam links entre tabelas
- CHECK - FUNÇÃO: Garantir que valores de uma coluna satisfaçam a uma condição específica;
- DEFAULT
- CREAT INDEX -

PK - Primay Key:
RESPONSAVEL: Por garantir a unidade do registro em uma tabela.
Registro é o conjunto de dados contidos nas colunas de uma tabela
do banco de dados, tambem chamado de TUPLA.
Uma tabela pode conter apenas uma PK e ela pode ser SIMPLES ou COMPOSTA

FK - Foreign Key:
É um campo ou um conjunto de colunas em uma tabela que fazem referência
a uma PK de uma tabela externa.
Uma tabela com uma FK tambem é chamada de tabela filha, e a tabela com
a PK especifica é chamada de pai/mãe.

Os relacionamentos entre Entidades se dão através de uma especificação de
CARDINALIDADE, que podem ser:
1:1 ->   Um pra um
1:N
N:1
N:N
-------------------------------------------------------------------------------------------
CREATE DATABASE UNOESC_BANK;

USE UNOESC_BANK;

CREATE TABLE CLIENTE(
	ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    
    NOME VARCHAR(255)
);

CREATE TABLE CONTA(
	ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    NRO_CONTA VARCHAR(10) NOT NULL,
    ID_CLIENTE INT NOT NULL,
    CONSTRAINT FK_ID_CLIENTE_CONTA FOREIGN KEY (ID_CLIENTE)
        REFERENCES CLIENTE(ID)

);

CREATE TABLE TRANSACAO (
	ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	ID_CONTA INT NOT NULL,
    TIPO_TRANSACAO INT NOT NULL,
    DATA_HORA DATETIME NOT NULL,
    VALOR FLOAT NOT NULL
);

-- DEFININFO UMA FK POSTERIORMENTE A CRIAÇÃO DA TABELA
ALTER TABLE TRANSACAO
ADD FOREIGN KEY (ID_CONTA)
REFERENCES CONTA(ID);

-- CRIANDO INDICES
CREATE INDEX IDX_TRANSACAO_TP_TRANSACAO
ON TRANSACAO (TIPO_TRANSACAO);

CREATE INDEX IDX_TRANSACAO_DATA_HORA
ON TRANSACAO (DATA_HORA);

CREATE TABLE CARTEIRA(
    ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    ID_CONTA INT NOT NULL,
    SALDO FLOAT NOT NULL,
    CONSTRAINT FK_ID_CONTA_CARTEIRA FOREIGN KEY (ID_CONTA)
        REFERENCES CONTA(ID)
);

ATIVIDADE

UMA IMOBILIARIA PRECISA DE UM BANCO DE DADOS PARA ARMAZENAR INFORMAÇÕES
DE SEU ACERVO DE IMOVEIS
PARA ISTO É PRECISO ORGANIZAR OS DADOS DOS INTENS,CLASSIFICANDO-OS POR
CATEGORIA (APARTAMENTOS< CASAS, SITIOS), TIPO DE LOCALIDADE (RURAL OU URBANO) 
E TIPO DE NEGOCIO (LOCAÇÃO OU VENDA). OS INTENS DEVEM POSSUIR OS SEGUINTES DADOS:
NOME,DESCRIÇÃO,VALOR,NRO DE COMODOS E TAMBEM UMA LISTAGEM DE IMAGENS.
ELABORE UM MODELO DE ENTIDADE-RELACIONAMENTO QUE ATENDA ESTE REQUISITO DESENHANDO
UM DIAGRAMA ILUSTRATIVO E ESCREVENDO O SEU RESPECTIVO SCRIPT. SQL 
